<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.sukbak.AccomMapper">
	
	<!-- 진선 -->
	<!-- 메인 숙소이름,주소 출력-->
	<select id="jsAccomBasicInfo" parameterType="java.lang.String" resultType="Accom">
		SELECT *
		FROM accom
		WHERE biz_id = #{biz_id}
	</select>
	
	<!-- 찬규 -->
	<!-- 조건에 상관없이 모든 리스트를 다 가져오는 sql   -->
	<select id="cgGetProductByAccomtype" resultType="Accom" parameterType="java.lang.String">
		SELECT a.biz_id, a.biz_name, a.addr, r.min_price_r2 , room_resv_pay_re.avg_rating 
		FROM    accom a
		      ,
		        users u
		      , (
		            SELECT room1.biz_id_r1 biz_id_r2, 
		                   room1.min_price_r1 min_price_r2, 
		                   room2.bed_type bed_type_r2, 
		                   room2.r_id r_id_r2, 
		                   room2.wifi wifi, 
		                   room2.tv tv, 
		                   room2.ac ac, 
		                   room2.bath bath, 
		                   room2.r_capacity r_capacity 
		            FROM room room2,
		                    ( 
		                    SELECT r.biz_id biz_id_r1, min(r.r_price) min_price_r1
		                    FROM room r
		                    GROUP BY r.biz_id
		                    )room1
		            WHERE room1.biz_id_r1 = room2.biz_id
		        ) r
		      , (
		            SELECT r.biz_id  biz_id , nvl(round(avg(rating),0),0) avg_rating
		            FROM room r, reservation resv, payment p, review re
		            WHERE r.biz_id = resv.biz_id(+)
		            AND   r.r_id = resv.r_id(+)
		            AND   resv.biz_id = p.biz_id(+)
		            AND   resv.r_id = p.r_id(+)
		            AND   resv.user_id = p.user_id(+)
		            AND   resv.resv_id = p.resv_id(+)
		            AND   p.pay_id = re.pay_id(+)
		            GROUP BY r.biz_id
		        ) room_resv_pay_re
		WHERE u.user_id = a.user_id
		AND   u.user_status = 'activated'
		AND   a.biz_id =  r.biz_id_r2
		AND   a.accom_avail = 210
		<if test="accom_type != null and accom_type != ''">
	    AND   a.accom_type in
	    	<foreach item="accom_type" index="index" collection="accom_type.split(',')" open="(" separator="," close=")">
	    		#{accom_type}
	    	</foreach>
	    </if>
		AND   r.biz_id_r2 = room_resv_pay_re.biz_id
		GROUP BY a.biz_id, a.biz_name, a.addr,  r.min_price_r2 , room_resv_pay_re.avg_rating
		ORDER BY  avg_rating DESC
	</select>
	<!-- 주소에 따라서 해당 주소지에만 있는 업소를 보여주는 로직 -->
	<select id="cgGetProductListsByAddr" parameterType="Accom" resultType="Accom">
			SELECT a.biz_id, a.biz_name, a.addr, r.min_price_r2 , room_resv_pay_re.avg_rating 
			FROM    accom a
		      ,
		        users u
		      , (
		            SELECT room1.biz_id_r1 biz_id_r2, 
		                   room1.min_price_r1 min_price_r2, 
		                   room2.bed_type bed_type_r2, 
		                   room2.r_id r_id_r2, 
		                   room2.wifi wifi, 
		                   room2.tv tv, 
		                   room2.ac ac, 
		                   room2.bath bath, 
		                   room2.r_capacity r_capacity 
		            FROM room room2,
		                    ( 
		                    SELECT r.biz_id biz_id_r1, min(r.r_price) min_price_r1
		                    FROM room r
		                    GROUP BY r.biz_id
		                    )room1
		            WHERE room1.biz_id_r1 = room2.biz_id
		        ) r
		      , (
		            SELECT r.biz_id  biz_id , nvl(round(avg(rating),0),0) avg_rating
		            FROM room r, reservation resv, payment p, review re
		            WHERE r.biz_id = resv.biz_id(+)
		            AND   r.r_id = resv.r_id(+)
		            AND   resv.biz_id = p.biz_id(+)
		            AND   resv.r_id = p.r_id(+)
		            AND   resv.user_id = p.user_id(+)
		            AND   resv.resv_id = p.resv_id(+)
		            AND   p.pay_id = re.pay_id(+)
		            GROUP BY r.biz_id
		        ) room_resv_pay_re
		WHERE u.user_id = a.user_id
		AND   u.user_status = 'activated'
		AND   a.biz_id =  r.biz_id_r2
		AND   a.accom_avail = 210
		<if test="accom_type != null and accom_type != ''">
	    AND   a.accom_type in
	    	<foreach item="accom_type" index="index" collection="accom_type.split(',')" open="(" separator="," close=")">
	    		#{accom_type}
	    	</foreach>
	    </if>
		AND	  a.addr		like  '%' || #{addr} || '%'	
		AND   r.biz_id_r2 = room_resv_pay_re.biz_id
		GROUP BY a.biz_id, a.biz_name, a.addr,  r.min_price_r2 , room_resv_pay_re.avg_rating
		ORDER BY  avg_rating DESC
	</select>
	
	
	<!-- 리뷰용 판매자가 가지고 있는 업장 불러오기  -->
	
	 <select id="getMyAccoms" parameterType="java.lang.String" resultType="Accom">
		SELECT a.biz_id, a.biz_name, a.addr, r.min_price_r2 , room_resv_pay_re.avg_rating
		FROM    accom a
		      ,
		        users u
		      , (
		            SELECT room1.biz_id_r1 biz_id_r2, 
		                   room1.min_price_r1 min_price_r2, 
		                   room2.r_id r_id_r2
		            FROM room room2,
		                    ( 
		                    SELECT r.biz_id biz_id_r1, min(r.r_price) min_price_r1
		                    FROM room r
		                    GROUP BY r.biz_id
		                    )room1
		            WHERE room1.biz_id_r1 = room2.biz_id
		        ) r
		      , (
		            SELECT r.biz_id  biz_id , nvl(round(avg(rating),0),0) avg_rating
		            FROM room r, reservation resv, payment p, review re
		            WHERE r.biz_id = resv.biz_id(+)
		            AND   r.r_id = resv.r_id(+)
		            AND   resv.biz_id = p.biz_id(+)
		            AND   resv.r_id = p.r_id(+)
		            AND   resv.user_id = p.user_id(+)
		            AND   resv.resv_id = p.resv_id(+)
		            AND   p.pay_id = re.pay_id(+)
		            GROUP BY r.biz_id
		        ) room_resv_pay_re
		WHERE u.user_id = a.user_id
		AND   u.user_status = 'activated'
		AND   a.biz_id =  r.biz_id_r2
		AND   a.accom_avail = 210
		AND   r.biz_id_r2 = room_resv_pay_re.biz_id
		and   a.user_id = #{sellerUser_id}
		GROUP BY a.biz_id, a.biz_name, a.addr,  r.min_price_r2 , room_resv_pay_re.avg_rating
		ORDER BY  a.biz_name
	</select> 
	
	<select id="getMyInfo" parameterType="java.lang.String" resultType="Accom">
		SELECT 	a.biz_id, a.biz_name, r.r_name,r.r_id
		FROM	accom a, room r
		WHERE 	a.biz_id = r.biz_id
		AND 	a.biz_id = #{biz_id}
	</select> 
	
	<!-- user_id로 찜 목록 가져오는 로직   -->
	<select id="getMyAccomZzimListsByUser_id" parameterType="java.lang.String" resultType="Accom">
		SELECT a.biz_id, a.biz_name, a.addr, r.min_price_r2 , room_resv_pay_re.avg_rating,z.zzim_date,z.zzim_status
		FROM    accom a
		      ,
		        zzim  z
		      ,
		        (
		            SELECT room1.biz_id_r1 biz_id_r2, 
		                   room1.min_price_r1 min_price_r2, 
		                   room2.bed_type bed_type_r2, 
		                   room2.r_id r_id_r2, 
		                   room2.wifi wifi, 
		                   room2.tv tv, 
		                   room2.ac ac, 
		                   room2.bath bath, 
		                   room2.r_capacity r_capacity 
		            FROM room room2,
		                    ( 
		                    SELECT r.biz_id biz_id_r1, min(r.r_price) min_price_r1
		                    FROM room r
		                    GROUP BY r.biz_id
		                    )room1
		            WHERE room1.biz_id_r1 = room2.biz_id
		        ) r
		      , (
		            SELECT r.biz_id  biz_id , nvl(round(avg(rating),0),0) avg_rating
		            FROM room r, reservation resv, payment p, review re
		            WHERE r.biz_id = resv.biz_id(+)
		            AND   r.r_id = resv.r_id(+)
		            AND   resv.biz_id = p.biz_id(+)
		            AND   resv.r_id = p.r_id(+)
		            AND   resv.resv_id = p.resv_id(+)
		            AND   resv.user_id = p.user_id(+)
		            AND   p.pay_id = re.pay_id(+)
		            GROUP BY r.biz_id
		        ) room_resv_pay_re
		where   a.biz_id =  r.biz_id_r2
		AND   a.biz_id = z.biz_id
		AND   a.accom_avail = 210
		and   z.user_id = #{user_id}
		AND   r.biz_id_r2 = room_resv_pay_re.biz_id
		GROUP BY a.biz_id, a.biz_name, a.addr,  r.min_price_r2 , room_resv_pay_re.avg_rating,z.zzim_date,z.zzim_status
		ORDER BY  z.zzim_date DESC
	</select>
	
	<!-- 재영 -->
	<insert id="accomInsert" parameterType="Accom">
    INSERT INTO accom (
        biz_id,
        user_id,
        accom_avail,
        accom_type,
        biz_name,
        addr,
        tel,
        room_count,
        description,
        latitude,
        longitude,
        pool,
        parking,
        cafe,
        restaurant,
        store,
        sauna,
        laundry,
        fitness
    ) VALUES (
        #{biz_id},
        #{user_id},
        #{accom_avail},
        #{accom_type},
        #{biz_name},
        #{addr},
        #{tel},
        #{room_count},
        #{description},
        #{latitude},
        #{longitude},
        #{pool},
        #{parking},
        #{cafe},
        #{restaurant},
        #{store},
        #{sauna},
        #{laundry},
        #{fitness}
    )
    
	</insert>
	<select id="accomList" parameterType="string" resultType="Accom">
		select *
		from accom
		where user_id = #{id} and
			accom_avail in(210, 220)
		ORDER BY #{biz_id} ASC
		
						
			
	</select> 
	<select id=""></select>
	
	<select id="accomSelect" parameterType="string" resultType="Accom">
		select *
		from accom
		where biz_id = #{biz_id} and
			accom_avail in(210,220)
	</select>
	
	<update id="accomUpdate" parameterType="Accom">
		update accom
		set accom_type	 = #{accom_type},
			biz_name 	 = #{biz_name},
			addr		 = #{addr},
			tel 		 = #{tel},
			description  = #{description},
			pool  		 = #{pool},
			parking 	 = #{parking},
			cafe 	 	 = #{cafe},
			restaurant   = #{restaurant},
			store   	 = #{store},
			sauna 		 = #{sauna},
			laundry  	 = #{laundry},
			fitness 	 = #{fitness}
		where biz_id 	 = #{biz_id} and
			  accom_avail = 210	
	</update>
	
	
	<select id="getBizId" parameterType="String" resultType="Int">
		select count(*)
		from accom
		where biz_id = #{biz_id}
	</select>
	
	<update id="roomCountUpdate" parameterType="java.lang.String">		        	        
		update accom
		set room_count = (
		                  select count(*)
		                  from room
		                  where biz_id = #{biz_id}
		                  )
		where biz_id = #{biz_id}
	</update>
	
	<update id="roomCountMinus" parameterType="java.lang.String">		                
		update accom
		set room_count = (
		                  select count(*) -1
		                  from room
		                  where biz_id = #{biz_id}
		                  )
		where biz_id = #{biz_id}
	</update>
	
	<update id="accomOpen" parameterType="Accom">
		update accom
		set accom_avail = '210'
		where biz_id = #{biz_id}
	</update>
	
	<update id="accomHidden"  parameterType="Accom">
		update accom
		set accom_avail = '220'
		where biz_id = #{biz_id}
	</update>
	
	<update id="accomDelete"  parameterType="Accom">
		update accom
		set accom_avail = '230'
		where biz_id = #{biz_id}
	</update>
	
	<!-- 윤상 -->
	<select id="yssearchAc" resultType="Accom" parameterType="Accom">
			SELECT
		r_img1.BIZ_ID AS biz_id, r_img1.R_IMG AS r_img, a.addr, a.biz_name,
		a.description
		FROM ROOM_IMG r_img1
		JOIN (
		SELECT room_img1.BIZ_ID AS biz_id, room_img2.R_ID AS r_id,
		MIN(room_img1.R_IMG_ID) AS R_IMG_ID
		FROM ROOM_IMG room_img1
		JOIN (
		SELECT BIZ_ID, MIN(R_ID) AS R_ID
		FROM ROOM_IMG
		GROUP BY BIZ_ID
		) room_img2 ON room_img1.BIZ_ID = room_img2.BIZ_ID AND room_img1.R_ID =
		room_img2.R_ID
		GROUP BY room_img1.BIZ_ID, room_img2.R_ID
		) r_img2 ON r_img1.BIZ_ID = r_img2.biz_id
		AND r_img1.R_ID = r_img2.r_id
		AND r_img1.R_IMG_ID = r_img2.R_IMG_ID
		JOIN accom a ON r_img1.BIZ_ID = a.biz_id
		WHERE a.addr LIKE '%' || #{keyword} || '%' OR a.BIZ_NAME LIKE '%' ||
		#{keyword} || '%'
	</select>
	<select id="ysAccomPage" resultType="int" parameterType="Accom">
		select
		count(*)
		from accom
	</select>
	<select id="ysAccomSearch" parameterType="Accom"
		resultType="Accom">
		SELECT *
		FROM (
		SELECT rownum rn, a.*
		FROM (
		SELECT *
		FROM Accom
		<choose>
		
			<when test="search == 's_biz_id'">
				WHERE biz_id LIKE '%' || #{keyword} || '%'
			</when>
			<when test="search == 's_user_id'">
				WHERE user_id LIKE '%' || #{keyword} || '%'
			</when>
			<when test="search == 's_accom_avail'">
				WHERE ccom_avail LIKE '%' || #{keyword} || '%'
			</when>
			<when test="search == 's_biz_name'">
				WHERE biz_name LIKE '%' || #{keyword} || '%'
			</when>
			<when test="search == 's_addr'">
				WHERE addr LIKE '%' || #{keyword} || '%'
			</when>
			<otherwise>
				WHERE biz_id LIKE '%'
			</otherwise>
		</choose>
		ORDER BY biz_id
		) a ) WHERE rn BETWEEN #{start} AND #{end}
	</select>
	<select id="ysAccomSearchPage" resultType="int"
		parameterType="Accom">
		select count(*)
		from Accom
		where
		<choose>
			<when test="search == 's_biz_id'">
				biz_id like '%' || #{keyword} || '%'
			</when>
			<when test="search == 's_user_id'">
				user_id like '%' || #{keyword} || '%'
			</when>
			<when test="search == 's_accom_avail'">
				accom_avail like '%' || #{keyword} || '%'
			</when>
			<when test="search == 's_biz_name'">
				biz_name like '%' || #{keyword} || '%'
			</when>
			<when test="search == 's_addr'">
				addr like '%' || #{keyword} || '%'
			</when>
			<otherwise>
				biz_id like '%'
			</otherwise>
		</choose>
	</select>
	
</mapper>